imports:
  - file: bootstrap.d/app-accessibility.yml
  - file: bootstrap.d/app-arch.yml
  - file: bootstrap.d/app-crypt.yml
  - file: bootstrap.d/app-editors.yml
  - file: bootstrap.d/app-misc.yml
  - file: bootstrap.d/app-shells.yml
  - file: bootstrap.d/app-text.yml
  - file: bootstrap.d/dev-db.yml
  - file: bootstrap.d/dev-lang.yml
  - file: bootstrap.d/dev-libs.yml
  - file: bootstrap.d/dev-qt.yml
  - file: bootstrap.d/dev-tcltk.yml
  - file: bootstrap.d/dev-util.yml
  - file: bootstrap.d/games-board.yml
  - file: bootstrap.d/games-misc.yml
  - file: bootstrap.d/gnome-base.yml
  - file: bootstrap.d/gui-apps.yml
  - file: bootstrap.d/gui-libs.yml
  - file: bootstrap.d/gui-wm.yml
  - file: bootstrap.d/media-fonts.yml
  - file: bootstrap.d/media-gfx.yml
  - file: bootstrap.d/media-libs.yml
  - file: bootstrap.d/net-dns.yml
  - file: bootstrap.d/net-libs.yml
  - file: bootstrap.d/net-misc.yml
  - file: bootstrap.d/sys-apps.yml
  - file: bootstrap.d/sys-auth.yml
  - file: bootstrap.d/sys-boot.yml
  - file: bootstrap.d/sys-devel.yml
  - file: bootstrap.d/sys-fs.yml
  - file: bootstrap.d/sys-libs.yml
  - file: bootstrap.d/sys-process.yml
  - file: bootstrap.d/www-client.yml
  - file: bootstrap.d/x11-apps.yml
  - file: bootstrap.d/x11-base.yml
  - file: bootstrap.d/x11-libs.yml
  - file: bootstrap.d/x11-misc.yml
  - file: bootstrap.d/x11-themes.yml

sources:
  - name: autoconf-v2.69
    subdir: ports
    url: "https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz"
    format: "tar.xz"
    extract_path: "autoconf-2.69"
    version: "2.69"

  - name: autoconf-archive
    subdir: ports
    git: "https://github.com/autoconf-archive/autoconf-archive.git"
    tag: "v2019.01.06"
    version: "2019.01.06"

  - name: automake-v1.15
    subdir: ports
    git: "https://git.savannah.gnu.org/git/automake.git"
    tag: "v1.15.1"
    version: "1.15.1"
    tools_required:
      - cross-autoconf-v2.69
    regenerate:
      - args: ["./bootstrap"]

  - name: libtool
    subdir: ports
    git: "https://git.savannah.gnu.org/git/libtool.git"
    tag: "v2.4.6"
    version: "2.4.6"
    tools_required:
      - cross-autoconf-v2.69
      - cross-automake-v1.15
    regenerate:
      - args: ["git", "submodule", "update", "--init"]
      - args: ["./bootstrap"]

  - name: pkg-config
    subdir: ports
    git: "https://gitlab.freedesktop.org/pkg-config/pkg-config.git"
    tag: "pkg-config-0.29.2"
    version: "0.29.2"
    tools_required:
      - cross-autoconf-v2.69
      - cross-automake-v1.15
      - cross-libtool
    regenerate:
      - args: ["./autogen.sh"]
        environ:
          NOCONFIGURE: "yes"

  - name: binutils
    subdir: ports
    git: "https://github.com/bminor/binutils-gdb.git"
    tag: "binutils-2_38"
    version: "2.38"
    tools_required:
      - cross-automake-v1.15

  - name: gcc
    subdir: ports
    git: "https://github.com/gcc-mirror/gcc.git"
    tag: "releases/gcc-11.2.0"
    version: "11.2.0"

  - name: linux
    subdir: ports
    url: 'https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.2.9.tar.xz'
    format: 'tar.xz'
    checksum: 'blake2b:0e7ad5502767cb74fa0fea79884ce753be0421a56bbbe0a6cb66add5839b3329298671725595c0624886d9d2836c4e9d4bd152acefb2b3df1cf7a1013e0178ba'
    extract_path: 'linux-6.2.9'
    version: '6.2.9'

  - name: mlibc
    subdir: ports
    git: "https://github.com/no92/mlibc.git"
    branch: "lfs"
    version: "2.2.0"

declare_options:
  - name: arch
    default: x86_64
  - name: arch-triple
    default: x86_64-linux-mlibc

tools:
  - name: cross-autoconf-v2.69
    from_source: autoconf-v2.69
    configure:
      - args: ["@THIS_SOURCE_DIR@/configure", "--prefix=@PREFIX@"]
    compile:
      - args: ["make", "-j@PARALLELISM@"]
    install:
      - args: ["make", "install"]

  - name: cross-autoconf-archive
    from_source: autoconf-archive
    exports_aclocal: true
    install:
      - args: ["mkdir", "-p", "@BUILD_ROOT@/tools/cross-autoconf-archive/share/"]
      - args: ["cp", "-r", "@THIS_SOURCE_DIR@/m4", "@BUILD_ROOT@/tools/cross-autoconf-archive/share/aclocal"]

  - name: cross-automake-v1.15
    from_source: automake-v1.15
    tools_required:
      - cross-autoconf-v2.69
    configure:
      - args: ["@THIS_SOURCE_DIR@/configure", "--prefix=@PREFIX@", "MAKEINFO=/bin/true"]
    compile:
      - args: ["make", "-j@PARALLELISM@"]
    install:
      - args: ["make", "install"]
      - args: ["ln", "-sf", "@PREFIX@/share/aclocal-1.15", "@PREFIX@/share/aclocal"]

  - name: cross-libtool
    exports_aclocal: true
    from_source: libtool
    tools_required:
      - cross-autoconf-v2.69
      - cross-automake-v1.15
    configure:
      - args: ["@THIS_SOURCE_DIR@/configure", "--prefix=@PREFIX@"]
    compile:
      - args: ["make", "-j@PARALLELISM@"]
    install:
      - args: ["make", "install"]

  - name: cross-pkg-config
    exports_aclocal: true
    from_source: pkg-config
    configure:
      - args: ["@THIS_SOURCE_DIR@/configure", "--prefix=@PREFIX@", "--with-internal-glib"]
    compile:
      - args: ["make", "-j@PARALLELISM@"]
    install:
      - args: ["make", "install"]

  - name: cross-binutils
    from_source: binutils
    tools_required:
      - cross-automake-v1.15
    configure:
      - args:
          - "@THIS_SOURCE_DIR@/configure"
          - "--prefix=@PREFIX@"
          - "--with-sysroot=@SYSROOT_DIR@"
          - "--target=@OPTION:arch-triple@"
          - "--disable-nls"
          - "--disable-werror"
    compile:
      - args: ["make", "-j@PARALLELISM@", 'all-binutils', 'all-gas', 'all-ld']
    install:
      - args: ["make", 'install-binutils', 'install-gas', 'install-ld']

  - name: cross-gcc
    from_source: gcc
    tools_required:
      - cross-binutils
    configure:
      - args:
          - "@THIS_SOURCE_DIR@/configure"
          - "--prefix=@PREFIX@"
          - "--with-sysroot=@SYSROOT_DIR@"
          - "--target=@OPTION:arch-triple@"
          - "--enable-languages=c,c++"
          - "--disable-multilib"
          - "--disable-nls"
          - "--enable-initfini-array"
          - "--enable-libstdcxx-filesystem-ts"
    stages:
      - name: compiler
        pkgs_required:
          - mlibc-headers
        compile:
          - args: ["make", "-j@PARALLELISM@", "all-gcc"]
        install:
          - args: ["make", "install-gcc"]
          - args: ["mkdir", "-p", "@PREFIX@/@OPTION:arch-triple@/bin"]
          - args: ["ln", "-sf", "../../../cross-binutils/@OPTION:arch-triple@/bin/as", "@PREFIX@/@OPTION:arch-triple@/bin/as"]
          - args: ["ln", "-sf", "../../../cross-binutils/@OPTION:arch-triple@/bin/ld", "@PREFIX@/@OPTION:arch-triple@/bin/ld"]

      - name: libgcc
        tools_required:
          - tool: cross-gcc
            stage_dependencies: [compiler]
        pkgs_required:
          - mlibc
        compile:
          - args: ["make", "-j@PARALLELISM@", "all-target-libgcc"]
        install:
          - args: ["make", "install-target-libgcc"]

      - name: libstdc++
        tools_required:
          - tool: cross-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ["make", "-j@PARALLELISM@", "all-target-libstdc++-v3"]
        install:
          - args: ["make", "install-strip-target-libstdc++-v3"]

      - name: libeverything
        tools_required:
          - tool: cross-gcc
            stage_dependencies: [libstdc++]
        pkgs_required:
          - libxcrypt
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libsanitizer', 'all-target-libatomic', 'all-target-libssp', 'all-target-libquadmath']
        install:
          - args: ['make', 'install-target-libsanitizer', 'install-target-libatomic', 'install-target-libssp', 'install-target-libquadmath']

  - name: cross-toolchain
    source:
      subdir: meta-sources
      version: "1.0"
    tools_required:
      - tool: cross-autoconf-v2.69
        recursive: true
      - tool: cross-automake-v1.15
        recursive: true
      - tool: cross-binutils
        recursive: true
      - tool: cross-gcc
        recursive: true
      - tool: cross-pkg-config
        recursive: true
      - tool: cross-libtool
        recursive: true
    configure: []
    compile: []
    install: []

packages:
  - name: base-files
    implict_package: true
    source:
      subdir: meta-sources
      version: '1.0'
    default: true
    build:
      - args: |
          mkdir -pv @THIS_COLLECT_DIR@/usr/{,local/}{bin,include,lib,sbin,src}
          ln -sfv usr/bin @THIS_COLLECT_DIR@/bin
          ln -sfv usr/lib @THIS_COLLECT_DIR@/lib
          ln -sfv usr/sbin @THIS_COLLECT_DIR@/sbin
          mkdir -pv @THIS_COLLECT_DIR@/{boot,home,mnt,opt,srv}
          mkdir -pv @THIS_COLLECT_DIR@/etc/{opt,sysconfig}
          mkdir -pv @THIS_COLLECT_DIR@/lib/firmware
          mkdir -pv @THIS_COLLECT_DIR@/media/{floppy,cdrom}
          mkdir -pv @THIS_COLLECT_DIR@/usr/local/{bin,lib,sbin}
          mkdir -pv @THIS_COLLECT_DIR@/usr/{,local/}share/{color,dict,doc,info,locale,man}
          mkdir -pv @THIS_COLLECT_DIR@/usr/{,local/}share/{misc,terminfo,zoneinfo}
          mkdir -pv @THIS_COLLECT_DIR@/usr/{,local/}share/man/man{1..8}
          mkdir -pv @THIS_COLLECT_DIR@/var/{cache,local,log,mail,opt,spool}
          mkdir -pv @THIS_COLLECT_DIR@/var/lib/{color,misc,locate}
          install -dv -m 0750 @THIS_COLLECT_DIR@/root
          install -dv -m 1777 @THIS_COLLECT_DIR@/tmp @THIS_COLLECT_DIR@/var/tmp
          install --directory --mode=0755 @THIS_COLLECT_DIR@/etc/profile.d
          cp @THIS_SOURCE_DIR@/{group,hosts,passwd,profile,bashrc,dircolors,shells,inputrc,hostname,resolv.conf} @THIS_COLLECT_DIR@/etc
          cp @THIS_SOURCE_DIR@/bash_completion.sh @THIS_COLLECT_DIR@/etc/profile.d
          cp @THIS_SOURCE_DIR@/dircolors.sh @THIS_COLLECT_DIR@/etc/profile.d
          cp @THIS_SOURCE_DIR@/extrapaths.sh @THIS_COLLECT_DIR@/etc/profile.d
          cp @THIS_SOURCE_DIR@/readline.sh @THIS_COLLECT_DIR@/etc/profile.d
          cp @THIS_SOURCE_DIR@/umask.sh @THIS_COLLECT_DIR@/etc/profile.d
          cp @THIS_SOURCE_DIR@/.bashrc @THIS_COLLECT_DIR@/root
          cp @THIS_SOURCE_DIR@/post-boot-fixup.sh @THIS_COLLECT_DIR@/root
          install --directory --mode=0755 @THIS_COLLECT_DIR@/etc/bash_completion.d
          touch @THIS_COLLECT_DIR@/{boot,home,mnt,opt,root,srv,tmp}/.keep
          touch @THIS_COLLECT_DIR@/etc/{opt,sysconfig}/.keep
          touch @THIS_COLLECT_DIR@/etc/bash_completion.d/.keep
          touch @THIS_COLLECT_DIR@/lib/firmware/.keep
          touch @THIS_COLLECT_DIR@/media/{floppy,cdrom}/.keep
          touch @THIS_COLLECT_DIR@/usr/{,local/}{bin,include,lib,sbin,src}/.keep
          touch @THIS_COLLECT_DIR@/usr/local/{bin,lib,sbin}/.keep
          touch @THIS_COLLECT_DIR@/usr/{,local/}share/{color,dict,doc,info,locale,man}/.keep
          touch @THIS_COLLECT_DIR@/usr/{,local/}share/{misc,terminfo,zoneinfo}/.keep
          touch @THIS_COLLECT_DIR@/usr/{,local/}share/man/man{1..8}/.keep
          touch @THIS_COLLECT_DIR@/var/{cache,local,log,mail,opt,spool}/.keep
          touch @THIS_COLLECT_DIR@/var/lib/{color,misc,locate}/.keep
          touch @THIS_COLLECT_DIR@/{tmp,var/tmp}/.keep
          ln -sfv /run @THIS_COLLECT_DIR@/var/run
          ln -sfv /run/lock @THIS_COLLECT_DIR@/var/lock

  - name: kernel-headers
    from_source: linux
    implict_package: true
    configure:
      - args: ['rsync', '-ar', '@THIS_SOURCE_DIR@/', '@THIS_BUILD_DIR@/']
    build:
      - args: ['make', 'mrproper', 'headers']
      - args: ['find', 'usr/include', '-name', '".*"', '-delete']
      - args: ['rm', 'usr/include/Makefile']
      - args: ['mkdir', '-pv', '@THIS_COLLECT_DIR@/usr']
      - args: ['cp', '-rv', 'usr/include', '@THIS_COLLECT_DIR@/usr']

  - name: kernel
    from_source: linux
    configure:
      - args: ['rsync', '-ar', '@THIS_SOURCE_DIR@/', '@THIS_BUILD_DIR@/']
      - args: ['make', 'mrproper']
      - args: ['cp', '@SOURCE_ROOT@/scripts/kernel.config', '@THIS_BUILD_DIR@/.config']
      - args: ['make', 'olddefconfig']
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'modules_install']
        environ:
          INSTALL_MOD_PATH: '@THIS_COLLECT_DIR@/usr/'
      - args: ['mkdir', '-pv', '@THIS_COLLECT_DIR@/boot']
      - args: ['cp', '-v', '@THIS_BUILD_DIR@/arch/x86/boot/bzImage', '@THIS_COLLECT_DIR@/boot/vmlinuz-linux']

  - name: mlibc-headers
    from_source: mlibc
    implict_package: true
    pkgs_required:
      - kernel-headers
    configure:
      - args:
          - "meson"
          - "--cross-file"
          - "@SOURCE_ROOT@/scripts/meson-x86_64-linux-mlibc.cross-file"
          - "--prefix=/usr"
          - "-Dheaders_only=true"
          - "-Ddisable_iconv_option=true"
          - "-Ddisable_intl_option=true"
          - "-Ddisable_crypt_option=true"
          - "-Dbuildtype=debug"
          - '-Dlinux_kernel_headers=@SYSROOT_DIR@/usr/include'
          - "@THIS_SOURCE_DIR@"
    build:
      - args: ["ninja"]
      - args: ["ninja", "install"]
        environ:
          DESTDIR: "@THIS_COLLECT_DIR@"

  - name: mlibc
    from_source: mlibc
    tools_required:
      - tool: cross-gcc
        stage_dependencies: ["compiler"]
      - tool: cross-binutils
    implict_package: true
    pkgs_required:
      - mlibc-headers
    configure:
      - args:
          - "meson"
          - "--cross-file"
          - "@SOURCE_ROOT@/scripts/meson-x86_64-linux-mlibc.cross-file"
          - "--prefix=/usr"
          - "--libdir=lib"
          - "-Dmlibc_no_headers=true"
          - "-Ddisable_iconv_option=true"
          - "-Ddisable_intl_option=true"
          - "-Ddisable_crypt_option=true"
          - "-Dbuildtype=debug"
          - '-Dlinux_kernel_headers=@SYSROOT_DIR@/usr/include'
          - "@THIS_SOURCE_DIR@"
    build:
      - args: ["ninja"]
      - args: ["ninja", "install"]
        environ:
          DESTDIR: "@THIS_COLLECT_DIR@"

tasks:
  - name: version-check
    args: ["@SOURCE_ROOT@/scripts/version-check.sh"]

  - name: mount
    args:
      - sudo
      - "@SOURCE_ROOT@/scripts/lfs.sh"
      - "@BUILD_ROOT@"
      - mount
    containerless: true

  - name: unmount
    args:
      - sudo
      - "@SOURCE_ROOT@/scripts/lfs.sh"
      - "@BUILD_ROOT@"
      - unmount
    containerless: true

  - name: chroot
    tasks_required:
      - mount
    args:
      - sudo
      - "@SOURCE_ROOT@/scripts/lfs.sh"
      - "@BUILD_ROOT@"
      - chroot
    containerless: true

  - name: mount-image
    args:
      - sudo
      - '@SOURCE_ROOT@/scripts/mount-image.sh'
      - '@BUILD_ROOT@'
    containerless: true

  - name: update-image
    tasks_required:
      - mount-image
    args:
      - sudo
      - '@SOURCE_ROOT@/scripts/update-image.sh'
      - '@BUILD_ROOT@'
    containerless: true

  - name: unmount-image
    args:
      - sudo
      - '@SOURCE_ROOT@/scripts/unmount-image.sh'
      - '@BUILD_ROOT@'
    containerless: true

  - name: make-image
    tools_required:
      - host-limine
    args: |
      sudo @SOURCE_ROOT@/scripts/make-image.sh @BUILD_ROOT@
      sudo @BUILD_ROOT@/tools/host-limine/share/limine/limine-deploy @BUILD_ROOT@/image
    containerless: true

  - name: qemu
    tasks_required:
      - make-image
    args:
      - qemu-system-x86_64
      - '-drive'
      - 'format=raw,file=@BUILD_ROOT@/image'
      - '-serial'
      - 'stdio'
      - '-machine'
      - 'q35,accel=kvm:whpx:tcg'
      - '-m'
      - '2G'
      - '-vga'
      - 'virtio'
      - '-device'
      - 'qemu-xhci,id=xhci'
      - '-device'
      - 'usb-kbd,bus=xhci.0'
      - '-device'
      - 'usb-tablet,bus=xhci.0'
      # - '-netdev'
      # - 'user,id=net0'
      # - '-device'
      # - 'virtio-net,disable-modern=on,netdev=net0'
      # - '-object'
      # - 'filter-dump,id=fd1,netdev=net0,file=net0dump'
    containerless: true
